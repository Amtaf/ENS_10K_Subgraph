type Domain @entity{
  id: ID!
  tokenId:BigInt!
  name:String!
  labelName:String
  labelHash:Bytes
  owner:OwnerAccount!
  previousOwner:OwnerAccount!
  createdAt:BigInt!
  duration:BigInt!
  expires:BigInt!


}

type OwnerAccount @entity{
  id:ID!
  address:Bytes!
  domain:[Domain!]! @derivedFrom(field: "owner")

}

 type RegisteredName @entity(immutable: true){
  id:ID!
  domain:Domain!
  owner:OwnerAccount!
  updateRegistry: Boolean! 
  cost:BigInt!
  labelName:String!
  name:String!
  registrationDate:BigInt
  expires: BigInt!
  
}


type RenewedName @entity(immutable: true){
 id:ID!
 owner:OwnerAccount!
 name: String!
 label:Bytes!
 RenewedDomain:Domain!
 Registration:RegisteredName!
 expires:BigInt!
 cost: BigInt!
 }

# type EthRegistrarControllerNameRegistered @entity {
#   id: ID!
#   name: String! # string
#   label: Bytes! # bytes32
#   owner: Bytes! # address
#   cost: BigInt! # uint256
#   expires: BigInt! # uint256
# }



type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}
